import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import HamburgerMenu from './Components/HamburgerMenu';



const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};


// function RootLayout({children}) { ... } → define a component function with a prop "children"
// chilren: ... → define object type , "children" is a React.ReactNode 
// Readonly<> → wrap with Readonly , takes an object type and makes all properties read-only.

export default function RootLayout({
  children
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <div className="header">
          <a href="/theme">Theme</a>
          <a href="/docker">Docker</a>
          <a href="/prima">Prima</a>
          <a href="/test">Test</a>
          <a href="/about">About</a>
          <HamburgerMenu />
        </div>

        
        {children}


        <footer className="footer">
          <p>© 2025 My Website. All rights reserved.</p>
          <p>22088587</p>
          <p>Shiying Wu</p>
        </footer>
      </body>
    </html>
  );
}
